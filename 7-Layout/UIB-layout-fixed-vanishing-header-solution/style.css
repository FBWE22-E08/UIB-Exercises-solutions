body {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  nav {
    position: sticky;
    top: 0;
    z-index: 100; /* put the nav on top of everything - always */
    background: white;
  }
  
  nav > ul {
    display: flex;
    justify-content: space-between;
    padding: 0;
    margin: 0;
  }
  
  nav > ul > li {
    list-style-type: none;
  
    flex-basis: 25%;
    padding: 10px;
  
    font-size: 1.5rem;
    font-style: italic;
    text-align: center;
  
    border-radius: 10px;
    box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);
  }
  
  header {
    height: 70vh;
    color: white;
    font-size: 2rem;
    font-style: italic;
  
    /* centering with the grid technique 
          => same effect as with flexbox + justify + align
        */
    display: grid;
    place-items: center;
  
    background-image: url(//unsplash.it/500/500);
    background-repeat: no-repeat;
    background-size: cover;
  
    background-attachment: fixed; /* fixes the image in the header,
           even when scrolling the page */
  }
  
  header > h1 {
    position: fixed; /* fix the heading so it sticks together with 
          the header background. Even when scrolling the page*/
    margin: 0;
    margin-top: 10%; /* position fixed takes the header out of normal flow
          making the viewport  */
    padding: 20px;
    left: 15%;
    right: 15%;
    text-align: center;
    color: black;
  }
  
  main {
    position: relative; /*
          this is necessary, otherwise the position element above (the header)
          would always win. Why?
          In the stacking order positioned elements always win over 
          non-positioned elements. That's why we give the main
          a position too so we prevent the header going on top of it
        */
    background: white;
    font-family: sans-serif;
    font-size: 1.5rem;
    line-height: 2rem;
    padding: 1.5rem;
  }
  
